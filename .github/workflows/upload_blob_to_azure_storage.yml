name: Upload to Azure Storage

on:
  workflow_dispatch:
#  pull_request:
  push:
    branches:
      - main
      - releases/**
      - feature/selc-5281
#    types: [closed]
    
#    paths:
#      - './products/env/**'

jobs:
  upload_product_json:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@cb79c773a3cfa27f31f25eb3f677781210c9ce3d # v1.6.1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
          
      - name: Set Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +"%Y%m%d%H%M%S")" >> $GITHUB_ENV
        
      - name: List Modified Files
        id: list_files
        run: |
          git fetch origin main
          git diff --name-only HEAD~1 HEAD > modified_files.txt
          cat modified_files.txt

      - name: Upload to blob storage DEV/UAT
        uses: azure/CLI@v2
        if: github.ref == 'refs/heads/main'
        with:
          inlineScript: |
            # Define the mapping of files to account names and containers
            declare -A FILE_TO_ACCOUNT=(
              ["./products/env/dev/products.json"]="selcdcheckoutsa:selc-d-product"
              ["./products/env/uat/products.json"]="selcucheckoutsa:selc-u-product"
              ["./products/env/dev-pnpg/products.json"]="selcdweupnpgcheckoutsa:selc-d-product"
              ["./products/env/uat-pnpg/products.json"]="selcuweupnpgcheckoutsa:selc-u-product"
            )
            
            while IFS= read -r file; do
              # Check if the file is in the mapping
              if [[ -n "${FILE_TO_ACCOUNT[$file]}" ]]; then
                # Extract account name and container name from the mapping
                account_and_container=${FILE_TO_ACCOUNT[$file]}
                account_name=$(echo $account_and_container | cut -d':' -f1)
                container_name=$(echo $account_and_container | cut -d':' -f2)
                
                echo "Uploading $file to account $account_name and container $container_name"
                az storage blob upload --auth-mode key \
                  -f $file \
                  --account-name $account_name \
                  -c $container_name \
                  -n "product_${{ env.TIMESTAMP }}.json" \
                  --overwrite
              else
                echo "No mapping found for $file"
              fi
            done < modified_files.txt
            
      - name: Upload to blob storage PROD
        uses: azure/CLI@v2
        if: startsWith(github.ref, 'refs/heads/releases/')
        with:
          inlineScript: |
            # Define the mapping of files to account names and containers
            declare -A FILE_TO_ACCOUNT=(
              ["./products/env/prod/products.json"]="selcdcheckoutsa:selc-p-product"
              ["./products/env/prod-pnpg/products.json"]="selcdweupnpgcheckoutsa:selc-p-product"
            )
            
            while IFS= read -r file; do
              # Check if the file is in the mapping
              if [[ -n "${FILE_TO_ACCOUNT[$file]}" ]]; then
                # Extract account name and container name from the mapping
                account_and_container=${FILE_TO_ACCOUNT[$file]}
                account_name=$(echo $account_and_container | cut -d':' -f1)
                container_name=$(echo $account_and_container | cut -d':' -f2)
                
                echo "Uploading $file to account $account_name and container $container_name"
                az storage blob upload --auth-mode key \
                  -f $file \
                  --account-name $account_name \
                  -c $container_name \
                  -n "product_${{ env.TIMESTAMP }}.json" \
                  --overwrite
              else
                echo "No mapping found for $file"
              fi
            done < modified_files.txt